import { GridLocaleText } from "@mui/x-data-grid";
import { t } from "i18next";

const gridLocaleText: Partial<GridLocaleText> = {
  noRowsLabel: t("datagrid:noRowsLabel"),
  noResultsOverlayLabel: t("datagrid:noResultsOverlayLabel"),
  toolbarDensity: t("datagrid:toolbarDensity"),
  toolbarDensityLabel: t("datagrid:toolbarDensityLabel"),
  toolbarDensityCompact: t("datagrid:toolbarDensityCompact"),
  toolbarDensityStandard: t("datagrid:toolbarDensityStandard"),
  toolbarDensityComfortable: t("datagrid:toolbarDensityComfortable"),
  toolbarColumns: t("datagrid:toolbarColumns"),
  toolbarColumnsLabel: t("datagrid:toolbarColumnsLabel"),
  toolbarFilters: t("datagrid:toolbarFilters"),
  toolbarFiltersLabel: t("datagrid:toolbarFiltersLabel"),
  toolbarFiltersTooltipHide: t("datagrid:toolbarFiltersTooltipHide"),
  toolbarFiltersTooltipShow: t("datagrid:toolbarFiltersTooltipShow"),
  toolbarFiltersTooltipActive: (count) =>
    count !== 1
      ? `${count} ${t("datagrid:toolbarFiltersTooltipMultipleActive")}`
      : `${count} ${t("datagrid:toolbarFiltersTooltipOneActive")}`,
  toolbarQuickFilterPlaceholder: t("datagrid:toolbarQuickFilterPlaceholder"),
  toolbarQuickFilterLabel: t("datagrid:toolbarQuickFilterLabel"),
  toolbarQuickFilterDeleteIconLabel: t("datagrid:toolbarQuickFilterDeleteIconLabel"),
  toolbarExport: t("datagrid:toolbarExport"),
  toolbarExportLabel: t("datagrid:toolbarExportLabel"),
  toolbarExportCSV: t("datagrid:toolbarExportCSV"),
  toolbarExportPrint: t("datagrid:toolbarExportPrint"),
  toolbarExportExcel: t("datagrid:toolbarExportExcel"),
  columnsManagementSearchTitle: t("datagrid:columnsManagementSearchTitle"),
  columnsManagementNoColumns: t("datagrid:columnsManagementNoColumns"),
  columnsManagementShowHideAllText: t("datagrid:columnsManagementShowHideAllText"),
  columnsManagementReset: t("datagrid:columnsManagementReset"),
  filterPanelAddFilter: t("datagrid:filterPanelAddFilter"),
  filterPanelRemoveAll: t("datagrid:filterPanelRemoveAll"),
  filterPanelDeleteIconLabel: t("datagrid:filterPanelDeleteIconLabel"),
  filterPanelLogicOperator: t("datagrid:filterPanelLogicOperator"),
  filterPanelOperator: t("datagrid:filterPanelOperator"),
  filterPanelOperatorAnd: t("datagrid:filterPanelOperatorAnd"),
  filterPanelOperatorOr: t("datagrid:filterPanelOperatorOr"),
  filterPanelColumns: t("datagrid:filterPanelColumns"),
  filterPanelInputLabel: t("datagrid:filterPanelInputLabel"),
  filterPanelInputPlaceholder: t("datagrid:filterPanelInputPlaceholder"),
  filterOperatorContains: t("datagrid:filterOperatorContains"),
  filterOperatorEquals: t("datagrid:filterOperatorEquals"),
  filterOperatorStartsWith: t("datagrid:filterOperatorStartsWith"),
  filterOperatorEndsWith: t("datagrid:filterOperatorEndsWith"),
  filterOperatorIs: t("datagrid:filterOperatorIs"),
  filterOperatorNot: t("datagrid:filterOperatorNot"),
  filterOperatorAfter: t("datagrid:filterOperatorAfter"),
  filterOperatorOnOrAfter: t("datagrid:filterOperatorOnOrAfter"),
  filterOperatorBefore: t("datagrid:filterOperatorBefore"),
  filterOperatorOnOrBefore: t("datagrid:filterOperatorOnOrBefore"),
  filterOperatorIsEmpty: t("datagrid:filterOperatorIsEmpty"),
  filterOperatorIsNotEmpty: t("datagrid:filterOperatorIsNotEmpty"),
  filterOperatorIsAnyOf: t("datagrid:filterOperatorIsAnyOf"),
  headerFilterOperatorContains: t("datagrid:headerFilterOperatorContains"),
  headerFilterOperatorEquals: t("datagrid:headerFilterOperatorEquals"),
  headerFilterOperatorStartsWith: t("datagrid:headerFilterOperatorStartsWith"),
  headerFilterOperatorEndsWith: t("datagrid:headerFilterOperatorEndsWith"),
  headerFilterOperatorIs: t("datagrid:headerFilterOperatorIs"),
  headerFilterOperatorNot: t("datagrid:headerFilterOperatorNot"),
  headerFilterOperatorAfter: t("datagrid:headerFilterOperatorAfter"),
  headerFilterOperatorOnOrAfter: t("datagrid:headerFilterOperatorOnOrAfter"),
  headerFilterOperatorBefore: t("datagrid:headerFilterOperatorBefore"),
  headerFilterOperatorOnOrBefore: t("datagrid:headerFilterOperatorOnOrBefore"),
  headerFilterOperatorIsEmpty: t("datagrid:headerFilterOperatorIsEmpty"),
  headerFilterOperatorIsNotEmpty: t("datagrid:headerFilterOperatorIsNotEmpty"),
  headerFilterOperatorIsAnyOf: t("datagrid:headerFilterOperatorIsAnyOf"),
  "headerFilterOperator=": t("datagrid:headerFilterOperator="),
  "headerFilterOperator!=": t("datagrid:headerFilterOperator!="),
  "headerFilterOperator>": t("datagrid:headerFilterOperator>"),
  "headerFilterOperator>=": t("datagrid:headerFilterOperator>="),
  "headerFilterOperator<": t("datagrid:headerFilterOperator<"),
  "headerFilterOperator<=": t("datagrid:headerFilterOperator<="),
  filterValueAny: t("datagrid:filterValueAny"),
  filterValueTrue: t("datagrid:filterValueTrue"),
  filterValueFalse: t("datagrid:filterValueFalse"),
  columnMenuLabel: t("datagrid:columnMenuLabel"),
  columnMenuShowColumns: t("datagrid:columnMenuShowColumns"),
  columnMenuManageColumns: t("datagrid:columnMenuManageColumns"),
  columnMenuFilter: t("datagrid:columnMenuFilter"),
  columnMenuHideColumn: t("datagrid:columnMenuHideColumn"),
  columnMenuUnsort: t("datagrid:columnMenuUnsort"),
  columnMenuSortAsc: t("datagrid:columnMenuSortAsc"),
  columnMenuSortDesc: t("datagrid:columnMenuSortDesc"),
  columnHeaderFiltersTooltipActive: (count) =>
    count !== 1
      ? `${count} ${t("datagrid:columnHeaderFiltersTooltipMultipleActive")}`
      : `${count} ${t("datagrid:columnHeaderFiltersTooltipOneActive")}`,
  columnHeaderFiltersLabel: t("datagrid:columnHeaderFiltersLabel"),
  columnHeaderSortIconLabel: t("datagrid:columnHeaderSortIconLabel"),
  footerRowSelected: (count) =>
    count !== 1
      ? `${count.toLocaleString()} ${t("datagrid:footerRowMultipleSelected")}`
      : `${count.toLocaleString()} ${t("datagrid:footerRowOneSelected")}`,
  footerTotalRows: t("datagrid:footerTotalRows"),
  footerTotalVisibleRows: (visibleCount, totalCount) =>
    `${visibleCount.toLocaleString()} ${t("datagrid:checkboxSelectionHeaderNameSeperator")} ${totalCount.toLocaleString()}`,
  checkboxSelectionHeaderName: t("datagrid:checkboxSelectionHeaderName"),
  checkboxSelectionSelectAllRows: t("datagrid:checkboxSelectionSelectAllRows"),
  checkboxSelectionUnselectAllRows: t("datagrid:checkboxSelectionUnselectAllRows"),
  checkboxSelectionSelectRow: t("datagrid:checkboxSelectionSelectRow"),
  checkboxSelectionUnselectRow: t("datagrid:checkboxSelectionUnselectRow"),
  booleanCellTrueLabel: t("datagrid:booleanCellTrueLabel"),
  booleanCellFalseLabel: t("datagrid:booleanCellFalseLabel"),
  actionsCellMore: t("datagrid:actionsCellMore"),
  pinToLeft: t("datagrid:pinToLeft"),
  pinToRight: t("datagrid:pinToRight"),
  unpin: t("datagrid:unpin"),
  treeDataGroupingHeaderName: t("datagrid:treeDataGroupingHeaderName"),
  treeDataExpand: t("datagrid:treeDataExpand"),
  treeDataCollapse: t("datagrid:treeDataCollapse"),
  groupingColumnHeaderName: t("datagrid:groupingColumnHeaderName"),
  groupColumn: (name) => `${t("datagrid:groupColumn")} ${name}`,
  unGroupColumn: (name) => `${t("datagrid:unGroupColumn")} ${name}`,
  detailPanelToggle: t("datagrid:detailPanelToggle"),
  expandDetailPanel: t("datagrid:expandDetailPanel"),
  collapseDetailPanel: t("datagrid:collapseDetailPanel"),
  rowReorderingHeaderName: t("datagrid:rowReorderingHeaderName"),
  aggregationMenuItemHeader: t("datagrid:aggregationMenuItemHeader"),
  aggregationFunctionLabelSum: t("datagrid:aggregationFunctionLabelSum"),
  aggregationFunctionLabelAvg: t("datagrid:aggregationFunctionLabelAvg"),
  aggregationFunctionLabelMin: t("datagrid:aggregationFunctionLabelMin"),
  aggregationFunctionLabelMax: t("datagrid:aggregationFunctionLabelMax"),
  aggregationFunctionLabelSize: t("datagrid:aggregationFunctionLabelSize"),
};

export default gridLocaleText;
